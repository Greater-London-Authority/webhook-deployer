name: Build binaries

on:
  pull_request:
  push:

env:
  # The go version to use for builds.
  GO_VERSION: "1.20.3"

jobs:
  #
  # Tests for all platforms. Runs a matrix build on Linux
  # with the list of expected supported Go versions (current, previous).
  #
  build-test:
    name: Build and test
    strategy:
      fail-fast: false
      matrix:
        runner: ["ubuntu-latest", "ubuntu-22.04"]
        go: ["1.20"]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Build
        run: |
          go build .

      - name: Test
        run: |
          go test .


  package-linux:
    name: Package for Linux
    needs:
      - build-test
    # runs-on: ubuntu-latest
    strategy:
      matrix:
        runner: ["ubuntu-latest", "ubuntu-22.04"]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.runner }}-go-${{ env.GO_VERSION }}-package-${{ hashFiles('go.sum') }}

      - name: Create packages
        run: |
          go build .
          cp webhook-deployer webhook-deployer-${{ matrix.runner }}
        env:
          CGO_ENABLED: "0"

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: webhook-deployer-${{ matrix.runner }}
          
